
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package aplicacioncliente;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\036\000\002\002\004\000\002\002\013\000\002\002" +
    "\003\000\002\003\003\000\002\003\004\000\002\004\007" +
    "\000\002\004\004\000\002\010\003\000\002\010\003\000" +
    "\002\010\003\000\002\011\010\000\002\005\006\000\002" +
    "\012\003\000\002\012\003\000\002\006\002\000\002\006" +
    "\004\000\002\013\003\000\002\013\003\000\002\013\003" +
    "\000\002\013\003\000\002\013\003\000\002\014\010\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\016\010\000\002\017\003\000\002\017\003\000\002\017" +
    "\003\000\002\007\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\102\000\006\003\004\004\005\001\002\000\004\004" +
    "\057\001\002\000\004\006\011\001\002\000\004\002\uffff" +
    "\001\002\000\004\002\010\001\002\000\004\002\001\001" +
    "\002\000\006\013\012\015\013\001\002\000\004\007\026" +
    "\001\002\000\004\005\014\001\002\000\006\003\004\004" +
    "\015\001\002\000\004\006\025\001\002\000\006\003\ufffe" +
    "\004\ufffe\001\002\000\006\003\004\004\020\001\002\000" +
    "\004\006\022\001\002\000\006\003\ufffd\004\ufffd\001\002" +
    "\000\006\013\012\016\023\001\002\000\004\005\024\001" +
    "\002\000\004\002\000\001\002\000\004\013\012\001\002" +
    "\000\030\020\040\021\050\022\037\023\046\024\034\025" +
    "\033\026\047\027\044\030\031\031\036\032\045\001\002" +
    "\000\010\002\ufff9\003\ufff9\004\ufff9\001\002\000\004\005" +
    "\077\001\002\000\004\005\uffe6\001\002\000\010\002\ufffa" +
    "\003\ufffa\004\ufffa\001\002\000\004\005\uffea\001\002\000" +
    "\004\005\uffeb\001\002\000\010\002\ufffc\003\ufffc\004\ufffc" +
    "\001\002\000\004\005\uffe5\001\002\000\004\005\uffef\001" +
    "\002\000\004\005\ufff1\001\002\000\004\005\072\001\002" +
    "\000\010\002\ufff8\003\ufff8\004\ufff8\001\002\000\004\005" +
    "\051\001\002\000\004\005\uffe7\001\002\000\004\005\uffed" +
    "\001\002\000\004\005\uffee\001\002\000\004\005\uffe9\001" +
    "\002\000\004\005\ufff0\001\002\000\004\011\052\001\002" +
    "\000\004\017\053\001\002\000\004\007\063\001\002\000" +
    "\004\012\055\001\002\000\004\004\057\001\002\000\010" +
    "\002\uffec\003\uffec\004\uffec\001\002\000\004\006\060\001" +
    "\002\000\004\014\061\001\002\000\004\005\062\001\002" +
    "\000\010\002\uffe4\003\uffe4\004\uffe4\001\002\000\006\033" +
    "\065\034\066\001\002\000\006\010\070\012\ufff3\001\002" +
    "\000\006\010\ufff5\012\ufff5\001\002\000\006\010\ufff4\012" +
    "\ufff4\001\002\000\004\012\ufff6\001\002\000\004\017\053" +
    "\001\002\000\004\012\ufff2\001\002\000\004\011\073\001" +
    "\002\000\004\017\053\001\002\000\004\012\075\001\002" +
    "\000\004\004\057\001\002\000\010\002\uffe8\003\uffe8\004" +
    "\uffe8\001\002\000\004\011\100\001\002\000\004\017\053" +
    "\001\002\000\004\012\102\001\002\000\004\004\057\001" +
    "\002\000\010\002\ufff7\003\ufff7\004\ufff7\001\002\000\010" +
    "\002\ufffb\003\ufffb\004\ufffb\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\102\000\006\002\006\004\005\001\001\000\004\007" +
    "\103\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\003\016\004\015\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\004\020\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\010\034\011\031\013\027\014\026\015\042\016\041" +
    "\017\040\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\053\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\055\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\012\063\001\001\000\004\006\066" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\070\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\073\001\001\000\002\001\001\000" +
    "\004\007\075\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\100\001\001\000\002\001\001\000\004\007" +
    "\102\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



public parser(lexico entrada){
	super(entrada);	
}
public void report_error(String message, Object info) {
	StringBuffer m = new StringBuffer("Error");
	if(info instanceof java_cup.runtime.Symbol){
		java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
		if(s.left >=0){
			m.append("en linea "+(s.left+1));
			if(s.right >=0){
				m.append("columna "+(s.right+1));
			}
		}
		m.append(": "+message);
	}
	//System.out.println(m);
}

public void syntax_error(Symbol cur_token){
    List<Integer> ids = this.expected_token_ids();
    String salida = "Error sintactico token :"+symbl_name_from_id(cur_token.sym);
    if(cur_token.value!=null)salida+=" Valor: "+cur_token.value.toString();
    salida+="\n Se esperaba: ";
    for (Integer e:ids){
        salida+= symbl_name_from_id(e)+"\n";
    }
    //reporte.agregarError("sintactico",salida,(cur_token.left+1),(cur_token.right+1));
    //System.out.println(salida);
}
public void report_fatal_error(String message, Object info){
	//System.out.println("Error irrecuperable");
}
private List<String> datosRespuestas = new ArrayList<>();
private List<Respuestas> respuestas = new ArrayList<>();
public List<Respuestas> getRespuestas(){
	return respuestas;
}
private void limpiarAuxiliares(){
	datosRespuestas.clear();
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= S0 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // S0 ::= MENOR_QUE SIGNO_INTERROGACION INICIO_RESPUESTAS MAYOR_QUE S1 MENOR_QUE SIGNO_INTERROGACION FIN_RESPUESTAS MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S0",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // S0 ::= S2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S0",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // S1 ::= S2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S1",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // S1 ::= S1 S2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S1",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // S2 ::= MENOR_QUE SIGNO_INTERROGACION INICIO_RESPUESTA DOS_PUNTOS S3 
            {
              Object RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String d = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
		//System.out.println("Solicitud: "+d+ " aceptada");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // S2 ::= error S13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // S3 ::= S4 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
		RESULT="CRUD_USUARIO";
		respuestas.add(new Respuestas (D,datosRespuestas));
		limpiarAuxiliares();
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S3",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // S3 ::= S9 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
		RESULT="CRUD_FORMULARIO";
		respuestas.add(new Respuestas (D,datosRespuestas));
		limpiarAuxiliares();
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S3",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // S3 ::= S11 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
		RESULT="CRUD_COMPONENTE";
		respuestas.add(new Respuestas (D,datosRespuestas));
		limpiarAuxiliares();
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S3",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // S4 ::= S8 MAYOR_QUE LLAVE_ABIERTA S5 LLAVE_CERRADA S13 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
		RESULT = D;
	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S4",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // S5 ::= INFO DOS_PUNTOS S6 S7 
            {
              Object RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
		datosRespuestas.add(D);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S5",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // S6 ::= CUALQUIER_COSA_CON_ESPACIOS 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
		RESULT = D;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S6",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // S6 ::= CUALQUIER_COSA_SIN_ESPACIOS 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
		RESULT = D;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S6",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // S7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S7",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // S7 ::= COMA S5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S7",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // S8 ::= CREAR_USUARIO 
            {
              String RESULT =null;
		
		RESULT = "CREACION USUARIO";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // S8 ::= MODIFICAR_USUARIO 
            {
              String RESULT =null;
		
		RESULT = "MODIFICACION USUARIO";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // S8 ::= ELIMINAR_USUARIO 
            {
              String RESULT =null;
		
		RESULT = "ELIMINACION USUARIO";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // S8 ::= LOGIN_USUARIO 
            {
              String RESULT =null;
		
		RESULT = "LOGEO USUARIO";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // S8 ::= ERROR_PARAMETRO 
            {
              String RESULT =null;
		
		RESULT = "ERROR";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // S9 ::= S10 MAYOR_QUE LLAVE_ABIERTA S5 LLAVE_CERRADA S13 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
		RESULT = D;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S9",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // S10 ::= NUEVO_FORMULARIO 
            {
              String RESULT =null;
		
		RESULT = "NUEVO FORMULARIO";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S10",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // S10 ::= ELIMINAR_FORMULARIO 
            {
              String RESULT =null;
		
		RESULT = "ELIMINACION FORMULARIO";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S10",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // S10 ::= MODIFICAR_FORMULARIO 
            {
              String RESULT =null;
		
		RESULT = "MODIFICACION FORMULARIO";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S10",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // S11 ::= S12 MAYOR_QUE LLAVE_ABIERTA S5 LLAVE_CERRADA S13 
            {
              String RESULT =null;
		int Dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int Dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String D = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
		RESULT = D;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S11",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // S12 ::= AGREGAR_COMPONENTE 
            {
              String RESULT =null;
		
		RESULT = "AGREGAR COMPONENTE";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S12",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // S12 ::= ELIMINAR_COMPONENTE 
            {
              String RESULT =null;
		
		RESULT = "ELIMINAR COMPONENTE";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S12",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // S12 ::= MODIFICAR_COMPONENTE 
            {
              String RESULT =null;
		
		RESULT = "MODIFICACION COMPONENTE";
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("S12",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // S13 ::= MENOR_QUE SIGNO_INTERROGACION FIN_RESPUESTA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("S13",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}

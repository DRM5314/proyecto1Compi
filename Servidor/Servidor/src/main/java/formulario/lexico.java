// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: lexicoBaseDatos.lex

package formulario;
import java_cup.runtime.*;

// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
class lexico implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0, 0
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\37\u0100\1\u0200\267\u0100\10\u0300\u1020\u0100";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\1\1\4\22\0\1\5"+
    "\1\6\1\7\1\0\1\10\3\0\1\11\1\12\2\0"+
    "\1\13\1\14\2\0\12\15\1\16\1\0\1\6\1\0"+
    "\1\6\2\0\1\17\1\20\1\21\1\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\1\50\4\0\1\51\1\0\32\47"+
    "\1\52\1\53\1\54\7\0\1\3\u01a2\0\2\3\326\0"+
    "\u0100\3";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[1024];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\2\2\1\1\2\1\3\1\4\1\5\1\6"+
    "\1\7\1\10\3\0\1\11\24\0\1\12\23\0\1\13"+
    "\36\0\1\14\40\0\1\15\22\0\1\16\5\0\1\17"+
    "\106\0\1\20\51\0\1\21\15\0\1\22\37\0\1\23"+
    "\2\0\1\24\4\0\1\25\42\0\1\26\6\0\1\27"+
    "\3\0\1\30\4\0\1\31\57\0\1\32\6\0\1\33"+
    "\25\0\1\34\13\0\1\35\1\36\1\37\1\0\1\40"+
    "\25\0\1\41\7\0\1\42\1\43\3\0\1\44\4\0"+
    "\1\45";

  private static int [] zzUnpackAction() {
    int [] result = new int[496];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\55\0\55\0\132\0\207\0\55\0\55\0\55"+
    "\0\55\0\55\0\55\0\264\0\341\0\u010e\0\55\0\u013b"+
    "\0\u0168\0\u0195\0\u01c2\0\u01ef\0\u021c\0\u0249\0\u0276\0\u02a3"+
    "\0\u02d0\0\u02fd\0\u032a\0\u0357\0\u0384\0\u03b1\0\u03de\0\u040b"+
    "\0\u0438\0\u0465\0\u0492\0\55\0\u04bf\0\u04ec\0\u0519\0\u0546"+
    "\0\u0573\0\u05a0\0\u05cd\0\u05fa\0\u0627\0\u0654\0\u0681\0\u06ae"+
    "\0\u06db\0\u0708\0\u0735\0\u0762\0\u078f\0\u07bc\0\u07e9\0\55"+
    "\0\u0816\0\u0843\0\u0870\0\u089d\0\u08ca\0\u08f7\0\u0924\0\u0951"+
    "\0\u097e\0\u09ab\0\u09d8\0\u0a05\0\u0a32\0\u0a5f\0\u0a8c\0\u0ab9"+
    "\0\u0ae6\0\u0b13\0\u0b40\0\u0b6d\0\u0b9a\0\u0bc7\0\u0bf4\0\u0c21"+
    "\0\u0c4e\0\u0c7b\0\u0ca8\0\u0cd5\0\u0d02\0\u0d2f\0\55\0\u0d5c"+
    "\0\u0d89\0\u0db6\0\u0de3\0\u0e10\0\u0e3d\0\u0e6a\0\u0e97\0\u0ec4"+
    "\0\u0ef1\0\u0f1e\0\u0f4b\0\u0f78\0\u0fa5\0\u0fd2\0\u0fff\0\u102c"+
    "\0\u1059\0\u1086\0\u10b3\0\u10e0\0\u110d\0\u113a\0\u1167\0\u1194"+
    "\0\u11c1\0\u11ee\0\u121b\0\u1248\0\u1275\0\u12a2\0\u12cf\0\55"+
    "\0\u12fc\0\u1329\0\u1356\0\u1383\0\u13b0\0\u13dd\0\u140a\0\u1437"+
    "\0\u1464\0\u1491\0\u14be\0\u14eb\0\u1518\0\u1545\0\u1572\0\u159f"+
    "\0\u15cc\0\u15f9\0\55\0\u1626\0\u1653\0\u1680\0\u16ad\0\u16da"+
    "\0\55\0\u1707\0\u1734\0\u1761\0\u178e\0\u17bb\0\u17e8\0\u1815"+
    "\0\u1842\0\u186f\0\u189c\0\u18c9\0\u18f6\0\u1923\0\u1950\0\u197d"+
    "\0\u19aa\0\u19d7\0\u1a04\0\u1a31\0\u1a5e\0\u1a8b\0\u1ab8\0\u1ae5"+
    "\0\u1b12\0\u1b3f\0\u1b6c\0\u1b99\0\u1bc6\0\u1bf3\0\u1c20\0\u1c4d"+
    "\0\u1c7a\0\u1ca7\0\u1cd4\0\u1d01\0\u1d2e\0\u1d5b\0\u1d88\0\u1db5"+
    "\0\u1de2\0\u1e0f\0\u1e3c\0\u1e69\0\u1e96\0\u1ec3\0\u1ef0\0\u1f1d"+
    "\0\u1f4a\0\u1f77\0\u1fa4\0\u1fd1\0\u1ffe\0\u202b\0\u2058\0\u2085"+
    "\0\u20b2\0\u20df\0\u210c\0\u2139\0\u2166\0\u2193\0\u21c0\0\u21ed"+
    "\0\u221a\0\u2247\0\u2274\0\u22a1\0\u22ce\0\u22fb\0\u2328\0\55"+
    "\0\u2355\0\u2382\0\u23af\0\u23dc\0\u2409\0\u2436\0\u2463\0\u2490"+
    "\0\u24bd\0\u24ea\0\u2517\0\u2544\0\u2571\0\u259e\0\u25cb\0\u25f8"+
    "\0\u2625\0\u2652\0\u267f\0\u26ac\0\u26d9\0\u2706\0\u2733\0\u2760"+
    "\0\u278d\0\u27ba\0\u27e7\0\u2814\0\u2841\0\u286e\0\u289b\0\u28c8"+
    "\0\u28f5\0\u2922\0\u294f\0\u297c\0\u29a9\0\u29d6\0\u2a03\0\u2a30"+
    "\0\u2a5d\0\55\0\u2a8a\0\u2ab7\0\u2ae4\0\u2b11\0\u2b3e\0\u2b6b"+
    "\0\u2b98\0\u2bc5\0\u2bf2\0\u2c1f\0\u2c4c\0\u2c79\0\u2ca6\0\55"+
    "\0\u2cd3\0\u2d00\0\u2d2d\0\u2d5a\0\u2d87\0\u2db4\0\u2de1\0\u2e0e"+
    "\0\u2e3b\0\u2e68\0\u2e95\0\u2ec2\0\u2eef\0\u2f1c\0\u2f49\0\u2f76"+
    "\0\u2fa3\0\u2fd0\0\u2ffd\0\u302a\0\u3057\0\u3084\0\u30b1\0\u30de"+
    "\0\u310b\0\u3138\0\u3165\0\u3192\0\u31bf\0\u31ec\0\u3219\0\55"+
    "\0\u3246\0\u3273\0\55\0\u32a0\0\u32cd\0\u32fa\0\u3327\0\55"+
    "\0\u3354\0\u3381\0\u33ae\0\u33db\0\u3408\0\u3435\0\u3462\0\u348f"+
    "\0\u34bc\0\u34e9\0\u3516\0\u3543\0\u3570\0\u359d\0\u35ca\0\u35f7"+
    "\0\u3624\0\u3651\0\u367e\0\u36ab\0\u36d8\0\u3705\0\u3732\0\u375f"+
    "\0\u378c\0\u37b9\0\u37e6\0\u3813\0\u3840\0\u386d\0\u389a\0\u38c7"+
    "\0\u38f4\0\u3921\0\55\0\u394e\0\u397b\0\u39a8\0\u39d5\0\u3a02"+
    "\0\u3a2f\0\55\0\u3a5c\0\u3a89\0\u3ab6\0\55\0\u3ae3\0\u3b10"+
    "\0\u3b3d\0\u3b6a\0\55\0\u3b97\0\u3bc4\0\u3bf1\0\u3c1e\0\u3c4b"+
    "\0\u3c78\0\u3ca5\0\u3cd2\0\u3cff\0\u3d2c\0\u3d59\0\u3d86\0\u3db3"+
    "\0\u3de0\0\u3e0d\0\u3e3a\0\u3e67\0\u3e94\0\u3ec1\0\u3eee\0\u3f1b"+
    "\0\u3f48\0\u3f75\0\u3fa2\0\u3fcf\0\u3ffc\0\u4029\0\u4056\0\u4083"+
    "\0\u40b0\0\u40dd\0\u410a\0\u4137\0\u4164\0\u4191\0\u41be\0\u41eb"+
    "\0\u4218\0\u4245\0\u4272\0\u429f\0\u42cc\0\u42f9\0\u4326\0\u4353"+
    "\0\u4380\0\u43ad\0\55\0\u43da\0\u4407\0\u4434\0\u4461\0\u448e"+
    "\0\u44bb\0\55\0\u44e8\0\u4515\0\u4542\0\u456f\0\u459c\0\u45c9"+
    "\0\u45f6\0\u4623\0\u4650\0\u467d\0\u46aa\0\u46d7\0\u4704\0\u4731"+
    "\0\u475e\0\u478b\0\u47b8\0\u47e5\0\u4812\0\u483f\0\u486c\0\55"+
    "\0\u4899\0\u48c6\0\u48f3\0\u4920\0\u494d\0\u497a\0\u49a7\0\u49d4"+
    "\0\u4a01\0\u4a2e\0\u4a5b\0\55\0\55\0\55\0\u4a88\0\55"+
    "\0\u4ab5\0\u4ae2\0\u4b0f\0\u4b3c\0\u4b69\0\u4b96\0\u4bc3\0\u4bf0"+
    "\0\u4c1d\0\u4c4a\0\u4c77\0\u4ca4\0\u4cd1\0\u4cfe\0\u4d2b\0\u4d58"+
    "\0\u4d85\0\u4db2\0\u4ddf\0\u4e0c\0\u4e39\0\55\0\u4e66\0\u4e93"+
    "\0\u4ec0\0\u4eed\0\u4f1a\0\u4f47\0\u4f74\0\55\0\55\0\u4fa1"+
    "\0\u4fce\0\u4ffb\0\55\0\u5028\0\u5055\0\u5082\0\u50af\0\55";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[496];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\0\1\4\1\3\1\2\1\5\1\2"+
    "\1\6\1\7\1\10\2\2\1\11\33\2\1\12\1\2"+
    "\1\13\57\0\1\3\52\0\2\14\1\15\1\14\1\15"+
    "\1\16\1\15\1\17\1\20\2\15\1\14\1\20\1\21"+
    "\1\15\1\22\1\23\1\24\1\25\1\26\1\27\2\14"+
    "\1\30\1\31\3\14\1\32\1\33\2\14\1\34\1\35"+
    "\1\36\1\37\1\14\1\40\3\14\1\20\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\33\14\1\15\1\41\6\15"+
    "\1\43\1\15\1\17\43\15\1\0\1\15\2\42\1\43"+
    "\1\42\1\43\1\16\1\43\1\44\1\45\2\43\1\42"+
    "\1\45\1\46\1\43\1\47\1\50\1\51\1\52\1\53"+
    "\1\54\2\42\1\55\1\56\3\42\1\57\1\60\2\42"+
    "\1\61\1\62\1\63\1\64\1\42\1\65\3\42\1\45"+
    "\1\43\1\41\1\43\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\66\2\15\1\14\2\66\1\15\33\66"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\67"+
    "\1\15\1\70\1\14\2\15\2\14\1\71\1\15\33\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\13\14\1\72"+
    "\5\14\1\73\11\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\16\14\1\74\14\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\1\75\3\14\1\76\2\14\1\77\3\14"+
    "\1\100\2\14\1\101\14\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\1\102\3\14\1\103\26\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\22\14\1\104\10\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\4\14\1\105\3\14"+
    "\1\106\5\14\1\107\14\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\3\14\1\110\10\14\1\111\1\112\13\14"+
    "\1\113\1\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\24\14\1\114\6\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\16\14\1\115\14\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\17\14\1\116\13\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\1\117\3\14\1\120\26\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\10\14\1\121\22\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\4\14\1\122"+
    "\3\14\1\123\22\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\21\14\1\124\1\125\10\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\7\14\1\126\23\14\1\15\1\41"+
    "\1\15\2\41\1\0\1\41\1\0\1\41\1\0\1\127"+
    "\1\41\2\0\3\41\1\0\33\41\1\0\1\41\1\0"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\33\42\1\43\1\41\10\43\1\44"+
    "\43\43\1\0\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\130\2\43\1\42\2\130\1\43\33\130"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\67"+
    "\1\43\1\70\1\42\2\43\2\42\1\131\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\13\42\1\132"+
    "\5\42\1\133\11\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\16\42\1\134\14\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\1\135\3\42\1\136\2\42\1\137\3\42"+
    "\1\140\2\42\1\141\14\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\1\142\3\42\1\143\26\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\22\42\1\144\10\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\4\42\1\145\3\42"+
    "\1\146\5\42\1\147\14\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\3\42\1\150\10\42\1\151\1\152\13\42"+
    "\1\153\1\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\24\42\1\154\6\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\16\42\1\155\14\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\17\42\1\156\13\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\1\157\3\42\1\160\26\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\10\42\1\161\22\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\4\42\1\162"+
    "\3\42\1\163\22\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\21\42\1\164\1\165\10\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\7\42\1\166\23\42\1\43\1\41"+
    "\1\43\2\14\1\15\1\14\1\15\1\167\1\15\1\170"+
    "\1\66\2\15\1\14\2\66\1\15\33\66\1\15\1\41"+
    "\1\15\2\42\1\43\1\42\1\43\1\67\1\43\1\70"+
    "\1\42\2\43\3\42\1\43\33\42\1\43\1\41\1\43"+
    "\2\14\1\15\1\14\1\15\1\67\1\15\1\70\1\14"+
    "\2\15\2\14\1\171\1\15\33\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\10\14\1\172\22\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\4\14\1\173\26\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\23\14\1\174\7\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\14\14\1\175"+
    "\16\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\15\14"+
    "\1\176\15\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\4\14\1\177\26\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\1\200\32\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\13\14\1\201\1\202\16\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\21\14\1\203\11\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\21\14\1\204\11\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\23\14\1\205\7\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\2\14\1\206"+
    "\30\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\2\14"+
    "\1\207\10\14\1\210\17\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\21\14\1\211\11\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\212\1\15\1\213\1\14"+
    "\2\15\3\14\1\15\32\14\1\214\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\1\215\32\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\3\14\1\216\27\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\20\14\1\217\12\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\22\14\1\220\10\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\161"+
    "\1\15\1\221\1\14\2\15\3\14\1\15\14\14\1\222"+
    "\16\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\2\14"+
    "\1\223\30\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\3\14\1\224\27\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\20\14\1\225\12\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\161\1\15\1\221\1\14\2\15"+
    "\3\14\1\15\33\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\14\14\1\226\12\14\1\227\3\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\23\14\1\230\7\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\13\14\1\231\17\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\24\14\1\232"+
    "\6\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\10\14"+
    "\1\233\22\14\1\15\1\41\1\15\2\42\1\43\1\42"+
    "\1\43\1\167\1\43\1\170\1\130\2\43\1\42\2\130"+
    "\1\43\33\130\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\67\1\43\1\70\1\42\2\43\2\42\1\234"+
    "\1\43\33\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\10\42\1\235\22\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\4\42\1\236\26\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\23\42\1\237\7\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\14\42\1\240\16\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\15\42\1\241\15\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\4\42\1\242\26\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\1\243\32\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\13\42\1\244"+
    "\1\245\16\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\21\42\1\246\11\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\21\42\1\247\11\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\23\42\1\250\7\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\2\42\1\251\30\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\2\42\1\252\10\42\1\253"+
    "\17\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\21\42"+
    "\1\254\11\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\212\1\43\1\213\1\42\2\43\3\42\1\43"+
    "\32\42\1\255\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\1\256\32\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\3\42\1\257\27\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\20\42\1\260\12\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\22\42\1\261\10\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\161\1\43\1\221\1\42"+
    "\2\43\3\42\1\43\14\42\1\262\16\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\2\42\1\263\30\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\3\42\1\264\27\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\20\42\1\265"+
    "\12\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\161\1\43\1\221\1\42\2\43\3\42\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\14\42\1\266"+
    "\12\42\1\267\3\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\23\42\1\270\7\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\13\42\1\271\17\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\24\42\1\272\6\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\10\42\1\273\22\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\167\1\43"+
    "\1\170\1\42\2\43\3\42\1\43\33\42\1\43\1\41"+
    "\1\43\2\14\1\15\1\14\1\15\1\67\1\15\1\70"+
    "\1\14\2\15\2\14\1\274\1\15\33\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\15\14\1\275\15\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\1\276\32\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\16\14\1\277\14\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\17\14\1\300"+
    "\13\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\23\14"+
    "\1\301\7\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\2\14\1\302\30\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\22\14\1\303\10\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\24\14\1\304\6\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\1\14\1\305\31\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\12\14\1\306\20\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\4\14\1\307\26\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\21\14\1\310"+
    "\11\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\7\14"+
    "\1\311\23\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\7\14\1\312\23\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\1\313\32\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\14\14\1\314\16\14\1\15\1\41\1\15\2\42"+
    "\1\43\1\42\1\43\1\212\1\43\1\213\1\42\2\43"+
    "\3\42\1\43\33\42\1\43\1\41\1\43\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\5\14\1\315\25\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\6\14\1\316\24\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\10\14\1\317\22\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\24\14\1\320\6\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\23\14\1\321\7\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\1\14\1\322"+
    "\31\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\10\14"+
    "\1\323\22\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\10\14\1\305\22\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\24\14\1\324\6\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\1\325\32\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\23\14\1\326\7\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\24\14\1\327\6\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\271\1\15\1\330"+
    "\1\14\2\15\3\14\1\15\33\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\1\331\32\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\23\14\1\332\7\14\1\15\1\41"+
    "\1\15\2\42\1\43\1\42\1\43\1\67\1\43\1\70"+
    "\1\42\2\43\2\42\1\333\1\43\33\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\15\42\1\334\15\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\1\335\32\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\16\42\1\336\14\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\17\42\1\337"+
    "\13\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\23\42"+
    "\1\340\7\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\2\42\1\341\30\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\22\42\1\342\10\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\24\42\1\343\6\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\1\42\1\344\31\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\12\42\1\345\20\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\4\42\1\346\26\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\21\42\1\347"+
    "\11\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\7\42"+
    "\1\350\23\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\7\42\1\351\23\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\1\352\32\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\14\42\1\353\16\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\5\42\1\354\25\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\6\42\1\355\24\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\10\42\1\356\22\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\24\42\1\357\6\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\23\42\1\360"+
    "\7\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\1\42"+
    "\1\361\31\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\10\42\1\362\22\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\10\42\1\344\22\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\24\42\1\363\6\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\1\364\32\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\23\42\1\365\7\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\24\42\1\366\6\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\271\1\43"+
    "\1\330\1\42\2\43\3\42\1\43\33\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\367\32\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\23\42\1\370\7\42\1\43"+
    "\1\41\1\43\2\14\1\15\1\14\1\15\1\67\1\15"+
    "\1\70\1\14\2\15\1\14\1\371\1\372\1\15\33\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\4\14\1\373"+
    "\26\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\32\14"+
    "\1\374\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\15\14"+
    "\1\375\15\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\16\14\1\276\14\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\21\14\1\376\11\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\12\14\1\377\20\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\4\14\1\u0100\26\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\14\14\1\u0101\16\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\16\14\1\375\14\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\345"+
    "\1\15\1\u0102\1\14\2\15\3\14\1\15\33\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\2\14\1\u0103\30\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\24\14\1\u0104"+
    "\6\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\1\u0105"+
    "\32\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\4\14"+
    "\1\u0106\26\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\22\14\1\u0107\10\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\24\14\1\u0108\6\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\16\14\1\u0109\14\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\4\14\1\277\26\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\2\14\1\u010a\30\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\10\14\1\u010b\22\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\10\14\1\u010c"+
    "\22\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\21\14"+
    "\1\u010d\11\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\16\14\1\u010e\14\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\4\14\1\u010f\26\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\364\1\15\1\u0110\1\14\2\15"+
    "\3\14\1\15\33\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\16\14\1\u0111\14\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\13\14\1\u0112\17\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\21\14\1\u0113\11\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\4\14\1\306\26\14\1\15"+
    "\1\41\1\15\2\42\1\43\1\42\1\43\1\67\1\43"+
    "\1\70\1\42\2\43\1\42\1\u0114\1\u0115\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\4\42\1\u0116"+
    "\26\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\32\42"+
    "\1\u0117\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\15\42"+
    "\1\u0118\15\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\16\42\1\335\14\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\21\42\1\u0119\11\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\12\42\1\u011a\20\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\4\42\1\u011b\26\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\14\42\1\u011c\16\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\16\42\1\u0118\14\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\345"+
    "\1\43\1\u0102\1\42\2\43\3\42\1\43\33\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\2\42\1\u011d\30\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\24\42\1\u011e"+
    "\6\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\1\u011f"+
    "\32\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\4\42"+
    "\1\u0120\26\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\22\42\1\u0121\10\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\24\42\1\u0122\6\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\16\42\1\u0123\14\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\4\42\1\336\26\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\2\42\1\u0124\30\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\10\42\1\u0125\22\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\10\42\1\u0126"+
    "\22\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\21\42"+
    "\1\u0127\11\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\16\42\1\u0128\14\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\4\42\1\u0129\26\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\364\1\43\1\u0110\1\42\2\43"+
    "\3\42\1\43\33\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\16\42\1\u012a\14\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\13\42\1\u012b\17\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\21\42\1\u012c\11\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\4\42\1\345\26\42\1\43"+
    "\1\41\1\43\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\2\14\1\u012d\1\15\33\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\67\1\15"+
    "\1\70\1\14\2\15\2\14\1\372\1\15\33\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\1\u012e\32\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\23\14\1\u012f\7\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\u0118"+
    "\1\15\1\u0130\1\14\2\15\3\14\1\15\33\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\16\14\1\u0131\14\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\1\14\1\u0132"+
    "\31\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\u011b\1\15\1\u0133\1\14\2\15\3\14\1\15\33\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\15\14\1\u0134"+
    "\15\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\7\14"+
    "\1\u0135\23\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\2\14\1\u0136\30\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\32\14\1\u0137\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\21\14\1\305\11\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\u0121\1\15\1\u0138\1\14\2\15"+
    "\3\14\1\15\33\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\13\14\1\u0139\17\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\21\14\1\u013a\11\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\4\14\1\u013b\26\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\4\14\1\u013c\26\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\5\14\1\u013d\25\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\4\14\1\u013e"+
    "\26\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\15\14"+
    "\1\u013f\15\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\21\14\1\u0140\11\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\32\14\1\u0141\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\16\14\1\u0142\14\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\10\14\1\u0143\22\14\1\15\1\41\1\15"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\2\42\1\u0144\1\43\33\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\67\1\43\1\70\1\42"+
    "\2\43\2\42\1\u0115\1\43\33\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\1\u0145\32\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\23\42\1\u0146\7\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\u0118\1\43\1\u0130"+
    "\1\42\2\43\3\42\1\43\33\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\16\42\1\u0147\14\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\42\1\u0148\31\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\u011b\1\43"+
    "\1\u0133\1\42\2\43\3\42\1\43\33\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\15\42\1\u0149\15\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\7\42\1\u014a\23\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\2\42\1\u014b"+
    "\30\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\32\42"+
    "\1\u014c\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\21\42"+
    "\1\344\11\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\u0121\1\43\1\u0138\1\42\2\43\3\42\1\43"+
    "\33\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\13\42"+
    "\1\u014d\17\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\21\42\1\u014e\11\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\4\42\1\u014f\26\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\4\42\1\u0150\26\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\5\42\1\u0151\25\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\4\42\1\u0152\26\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\15\42\1\u0153\15\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\21\42\1\u0154"+
    "\11\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\32\42"+
    "\1\u0155\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\16\42"+
    "\1\u0156\14\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\10\42\1\u0157\22\42\1\43\1\41\1\43\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\2\14"+
    "\1\u0158\1\15\33\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\2\14\1\u0159\30\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\4\14\1\u015a\26\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\u0147\1\15\1\u015b\1\14"+
    "\2\15\3\14\1\15\33\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\16\14\1\u015c\14\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\1\u015d\32\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\1\u0131\32\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\23\14\1\u015e\7\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\2\14\1\u015f\30\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\1\u0160\32\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\14\14\1\u0161\16\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\u014f"+
    "\1\15\1\u0162\1\14\2\15\3\14\1\15\33\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\21\14\1\u0163\11\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\10\14\1\u0164"+
    "\22\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\u0165\1\15\1\u0166\1\14\2\15\3\14\1\15\32\14"+
    "\1\u0167\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\4\14"+
    "\1\u0168\26\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\10\14\1\u0169\22\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\25\14\1\u016a\5\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\u0156\1\15\1\u016b\1\14\2\15"+
    "\3\14\1\15\33\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\16\14\1\u016c\14\14\1\15\1\41\1\15\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\2\42\1\u016d\1\43\33\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\2\42\1\u016e\30\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\4\42\1\u016f\26\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\u0147\1\43\1\u015b"+
    "\1\42\2\43\3\42\1\43\33\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\16\42\1\u0170\14\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\u0171\32\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\u0147\32\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\23\42\1\u0172\7\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\2\42\1\u0173\30\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\1\u0174\32\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\14\42\1\u0175"+
    "\16\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\u014f\1\43\1\u0162\1\42\2\43\3\42\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\21\42\1\u0176"+
    "\11\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\10\42"+
    "\1\u0177\22\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\u0165\1\43\1\u0166\1\42\2\43\3\42\1\43"+
    "\32\42\1\u0178\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\4\42\1\u0179\26\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\10\42\1\u017a\22\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\25\42\1\u017b\5\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\u0156\1\43\1\u016b\1\42"+
    "\2\43\3\42\1\43\33\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\16\42\1\u017c\14\42\1\43\1\41\1\43"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\1\14\1\u017d\1\14\1\15\33\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\10\14\1\u017e\22\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\27\14\1\u017f\3\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\27\14\1\375"+
    "\3\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\22\14"+
    "\1\u0180\10\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\24\14\1\u0181\6\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\21\14\1\u0182\11\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\21\14\1\u0183\11\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\24\14\1\u0184\6\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\3\14\1\u0135\27\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\2\14\1\u0185\30\14"+
    "\1\15\1\41\1\15\2\42\1\43\1\42\1\43\1\u0165"+
    "\1\43\1\u0166\1\42\2\43\3\42\1\43\33\42\1\43"+
    "\1\41\1\43\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\2\14\1\u0186\30\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\22\14\1\u0187"+
    "\10\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\3\14"+
    "\1\u0188\27\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\10\14\1\u0189\22\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\32\14\1\u018a\1\15\1\41\1\15\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\1\42"+
    "\1\u018b\1\42\1\43\33\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\10\42\1\u018c\22\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\27\42\1\u018d\3\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\27\42\1\u0118\3\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\22\42\1\u018e\10\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\24\42\1\u018f"+
    "\6\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\21\42"+
    "\1\u0190\11\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\21\42\1\u0191\11\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\24\42\1\u0192\6\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\3\42\1\u014a\27\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\2\42\1\u0193\30\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\2\42\1\u0194\30\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\22\42\1\u0195\10\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\3\42\1\u0196"+
    "\27\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\10\42"+
    "\1\u0197\22\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\32\42\1\u0198\1\43\1\41\1\43\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\2\14\1\u0199"+
    "\1\15\33\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\16\14\1\u019a\14\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\23\14\1\305\7\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\u018e\1\15\1\u019b\1\14\2\15"+
    "\3\14\1\15\33\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\21\14\1\u019c\11\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\4\14\1\u019d\26\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\10\14\1\u019e\22\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\13\14\1\u019f\17\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\1\u01a0\32\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\1\u01a1\32\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\u0195\1\15"+
    "\1\u01a2\1\14\2\15\3\14\1\15\33\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\16\14\1\u01a3\14\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\22\14\1\u01a4\10\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\2\14\1\u01a5"+
    "\30\14\1\15\1\41\1\15\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\2\42\1\u01a6\1\43"+
    "\33\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\16\42"+
    "\1\u01a7\14\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\23\42\1\344\7\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\u018e\1\43\1\u019b\1\42\2\43\3\42"+
    "\1\43\33\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\21\42\1\u01a8\11\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\4\42\1\u01a9\26\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\10\42\1\u01aa\22\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\13\42\1\u01ab\17\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\u01ac\32\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\u01ad\32\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\u0195\1\43\1\u01a2"+
    "\1\42\2\43\3\42\1\43\33\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\16\42\1\u01ae\14\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\22\42\1\u01af\10\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\2\42\1\u01b0\30\42"+
    "\1\43\1\41\1\43\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\2\14\1\u01b1\1\15\33\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\15\14\1\u01b2"+
    "\15\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\1\u01b3"+
    "\32\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\1\u01b4"+
    "\32\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\16\14"+
    "\1\u01b5\14\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\1\u01b6\32\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\21\14\1\u0131\11\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\14\14\1\u01b7\16\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\u01ae\1\15\1\u01b8\1\14\2\15"+
    "\3\14\1\15\33\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\42\1\15\1\17\1\14\2\15\3\14"+
    "\1\15\10\14\1\u01b9\22\14\1\15\1\41\1\15\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\21\14\1\u01ba\11\14\1\15\1\41\1\15"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\2\42\1\u01bb\1\43\33\42\1\43\1\41\1\43"+
    "\2\42\1\43\1\42\1\43\1\42\1\43\1\44\1\42"+
    "\2\43\3\42\1\43\15\42\1\u01bc\15\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\u01bd\32\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\1\u01be\32\42\1\43\1\41"+
    "\1\43\2\42\1\43\1\42\1\43\1\42\1\43\1\44"+
    "\1\42\2\43\3\42\1\43\16\42\1\u01bf\14\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\1\u01c0\32\42\1\43"+
    "\1\41\1\43\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\21\42\1\u0147\11\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\14\42\1\u01c1"+
    "\16\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\u01ae\1\43\1\u01b8\1\42\2\43\3\42\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\10\42\1\u01c2"+
    "\22\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\21\42"+
    "\1\u01c3\11\42\1\43\1\41\1\43\2\14\1\15\1\14"+
    "\1\15\1\u01bb\1\15\1\u01c4\1\14\2\15\3\14\1\15"+
    "\33\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\u01bc\1\15\1\u01c5\1\14\2\15\3\14\1\15\33\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\u01bd"+
    "\1\15\1\u01c6\1\14\2\15\3\14\1\15\33\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\2\14\1\u01c7\30\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\u01bf"+
    "\1\15\1\u01c8\1\14\2\15\3\14\1\15\33\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\21\14\1\u01c9\11\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\17\14\1\u01ca"+
    "\13\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\1\14"+
    "\1\u01cb\31\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\4\14\1\u01cc\26\14\1\15\1\41\1\15\2\42\1\43"+
    "\1\42\1\43\1\u01bb\1\43\1\u01c4\1\42\2\43\3\42"+
    "\1\43\33\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\u01bc\1\43\1\u01c5\1\42\2\43\3\42\1\43"+
    "\33\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\u01bd\1\43\1\u01c6\1\42\2\43\3\42\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\2\42\1\u01cd"+
    "\30\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\u01bf\1\43\1\u01c8\1\42\2\43\3\42\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\21\42\1\u01ce"+
    "\11\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\17\42"+
    "\1\u01cf\13\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\1\42\1\u01d0\31\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\4\42\1\u01d1\26\42\1\43\1\41\1\43\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\10\14\1\u01d2\22\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\10\14\1\u01d3\22\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\16\14\1\u01d4\14\14\1\15"+
    "\1\41\1\15\2\14\1\15\1\14\1\15\1\42\1\15"+
    "\1\17\1\14\2\15\3\14\1\15\13\14\1\u01d5\17\14"+
    "\1\15\1\41\1\15\2\14\1\15\1\14\1\15\1\42"+
    "\1\15\1\17\1\14\2\15\3\14\1\15\1\u01d6\32\14"+
    "\1\15\1\41\1\15\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\10\42\1\u01d7"+
    "\22\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\10\42"+
    "\1\u01d8\22\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\16\42\1\u01d9\14\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\13\42\1\u01da\17\42\1\43\1\41\1\43\2\42"+
    "\1\43\1\42\1\43\1\42\1\43\1\44\1\42\2\43"+
    "\3\42\1\43\1\u01db\32\42\1\43\1\41\1\43\2\14"+
    "\1\15\1\14\1\15\1\42\1\15\1\17\1\14\2\15"+
    "\3\14\1\15\16\14\1\u01dc\14\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\16\14\1\u01dd\14\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\u01d9\1\15\1\u01de"+
    "\1\14\2\15\3\14\1\15\33\14\1\15\1\41\1\15"+
    "\2\14\1\15\1\14\1\15\1\42\1\15\1\17\1\14"+
    "\2\15\3\14\1\15\4\14\1\u01df\26\14\1\15\1\41"+
    "\1\15\2\14\1\15\1\14\1\15\1\42\1\15\1\17"+
    "\1\14\2\15\3\14\1\15\2\14\1\u01e0\30\14\1\15"+
    "\1\41\1\15\2\42\1\43\1\42\1\43\1\42\1\43"+
    "\1\44\1\42\2\43\3\42\1\43\16\42\1\u01e1\14\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\16\42\1\u01e2"+
    "\14\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\u01d9\1\43\1\u01de\1\42\2\43\3\42\1\43\33\42"+
    "\1\43\1\41\1\43\2\42\1\43\1\42\1\43\1\42"+
    "\1\43\1\44\1\42\2\43\3\42\1\43\4\42\1\u01e3"+
    "\26\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\2\42"+
    "\1\u01e4\30\42\1\43\1\41\1\43\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\15\14\1\u01e5\15\14\1\15\1\41\1\15\2\14\1\15"+
    "\1\14\1\15\1\u01e2\1\15\1\u01e6\1\14\2\15\3\14"+
    "\1\15\33\14\1\15\1\41\1\15\2\14\1\15\1\14"+
    "\1\15\1\u01e3\1\15\1\u01e7\1\14\2\15\3\14\1\15"+
    "\33\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\10\14"+
    "\1\u01e8\22\14\1\15\1\41\1\15\2\42\1\43\1\42"+
    "\1\43\1\42\1\43\1\44\1\42\2\43\3\42\1\43"+
    "\15\42\1\u01e9\15\42\1\43\1\41\1\43\2\42\1\43"+
    "\1\42\1\43\1\u01e2\1\43\1\u01e6\1\42\2\43\3\42"+
    "\1\43\33\42\1\43\1\41\1\43\2\42\1\43\1\42"+
    "\1\43\1\u01e3\1\43\1\u01e7\1\42\2\43\3\42\1\43"+
    "\33\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\10\42"+
    "\1\u01ea\22\42\1\43\1\41\1\43\2\14\1\15\1\14"+
    "\1\15\1\u01e9\1\15\1\u01eb\1\14\2\15\3\14\1\15"+
    "\33\14\1\15\1\41\1\15\2\14\1\15\1\14\1\15"+
    "\1\42\1\15\1\17\1\14\2\15\3\14\1\15\16\14"+
    "\1\u01ec\14\14\1\15\1\41\1\15\2\42\1\43\1\42"+
    "\1\43\1\u01e9\1\43\1\u01eb\1\42\2\43\3\42\1\43"+
    "\33\42\1\43\1\41\1\43\2\42\1\43\1\42\1\43"+
    "\1\42\1\43\1\44\1\42\2\43\3\42\1\43\16\42"+
    "\1\u01ed\14\42\1\43\1\41\1\43\2\14\1\15\1\14"+
    "\1\15\1\42\1\15\1\17\1\14\2\15\3\14\1\15"+
    "\15\14\1\u01ee\15\14\1\15\1\41\1\15\2\42\1\43"+
    "\1\42\1\43\1\42\1\43\1\44\1\42\2\43\3\42"+
    "\1\43\15\42\1\u01ef\15\42\1\43\1\41\1\43\2\14"+
    "\1\15\1\14\1\15\1\u01ef\1\15\1\u01f0\1\14\2\15"+
    "\3\14\1\15\33\14\1\15\1\41\1\15\2\42\1\43"+
    "\1\42\1\43\1\u01ef\1\43\1\u01f0\1\42\2\43\3\42"+
    "\1\43\33\42\1\43\1\41\1\43";

  private static int [] zzUnpackTrans() {
    int [] result = new int[20700];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\2\11\2\1\6\11\3\0\1\11\24\0\1\11"+
    "\23\0\1\11\36\0\1\11\40\0\1\11\22\0\1\11"+
    "\5\0\1\11\106\0\1\11\51\0\1\11\15\0\1\11"+
    "\37\0\1\11\2\0\1\11\4\0\1\11\42\0\1\11"+
    "\6\0\1\11\3\0\1\11\4\0\1\11\57\0\1\11"+
    "\6\0\1\11\25\0\1\11\13\0\3\11\1\0\1\11"+
    "\25\0\1\11\7\0\2\11\3\0\1\11\4\0\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[496];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */


private Symbol symbol (int tipo){
    return new Symbol (tipo,yyline,yycolumn);
}   
private Symbol symbol (int tipo, Object value){
    return new Symbol (tipo,yyline,yycolumn,value);
}



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  lexico(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { 
            }
            // fall through
          case 38: break;
          case 2:
            { //System.out.println("Error lexico "+yytext().trim().replaceAll("\"", "")+" Linea"+(yyline+1)+" Columna "+(yycolumn));
            }
            // fall through
          case 39: break;
          case 3:
            { //System.out.println("Detecto PARENTESIS_ABIERTO");  
return symbol(sym.PARENTESIS_ABIERTO);
            }
            // fall through
          case 40: break;
          case 4:
            { //System.out.println("Detecto PARENTESIS_CERRADO"); 
return symbol(sym.PARENTESIS_CERRADO);
            }
            // fall through
          case 41: break;
          case 5:
            { //System.out.println("Detecto COMA");  
return symbol(sym.COMA);
            }
            // fall through
          case 42: break;
          case 6:
            { //System.out.println("Detecto DOS_PUNTOS");  
return symbol(sym.DOS_PUNTOS);
            }
            // fall through
          case 43: break;
          case 7:
            { //System.out.println("Detecto LLAVE_ABIERTA");  
return symbol(sym.LLAVE_ABIERTA);
            }
            // fall through
          case 44: break;
          case 8:
            { //System.out.println("Detecto LLAVE_CERRADA"); 
return symbol(sym.LLAVE_CERRADA);
            }
            // fall through
          case 45: break;
          case 9:
            { //System.out.println("Detecto CUALQUIER_COSA_SIN_ESPACIOS: "+yytext().trim().replaceAll("\"", ""));   
return symbol(sym.CUALQUIER_COSA_SIN_ESPACIOS,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 46: break;
          case 10:
            { //System.out.println("Detecto CUALQUIER_COSA_CON_ESPACIOS: "+yytext().trim().replaceAll("\"", ""));   
return symbol(sym.CUALQUIER_COSA_CON_ESPACIOS,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 47: break;
          case 11:
            { //System.out.println("Detecto DIGITO: "+yytext().trim().replaceAll("\"", ""));  
return symbol(sym.DIGITO,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 48: break;
          case 12:
            { //System.out.println("Detecto OPCIONES_PARAMETRO: "+yytext().trim().replaceAll("\"", ""));   
return symbol(sym.OPCIONES_PARAMETRO,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 49: break;
          case 13:
            { //System.out.println("Detecto ID_PARAMETRO: "+yytext().trim().replaceAll("\"", ""));
return symbol(sym.ID_PARAMETRO,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 50: break;
          case 14:
            { //System.out.println("Detecto ID");  
return symbol(sym.ID);
            }
            // fall through
          case 51: break;
          case 15:
            { //System.out.println("Detecto REQUERIDO_PARAMETRO: "+yytext().trim().replaceAll("\"", ""));  
return symbol(sym.REQUERIDO_PARAMETRO,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 52: break;
          case 16:
            { //System.out.println("Detecto URL");  
return symbol(sym.URL);
            }
            // fall through
          case 53: break;
          case 17:
            { //System.out.println("Detecto TEMA parametro: "+yytext().trim().replaceAll("\"", ""));  
return symbol(sym.TEMA_PARAMETRO,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 54: break;
          case 18:
            { //System.out.println("Detecto TEMA");  
return symbol(sym.TEMA);
            }
            // fall through
          case 55: break;
          case 19:
            { //System.out.println("Detecto CLASE_PARAMETRO: "+yytext().trim().replaceAll("\"", ""));  
return symbol(sym.CLASE_PARAMETRO,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 56: break;
          case 20:
            { //System.out.println("Detecto CLASE");  
return symbol(sym.CLASE);
            }
            // fall through
          case 57: break;
          case 21:
            { //System.out.println("Detecto FILAS");  
return symbol(sym.FILAS);
            }
            // fall through
          case 58: break;
          case 22:
            { //System.out.println("Detecto ALINEACION_PARAMETRO: "+yytext().trim().replaceAll("\"", ""));  
return symbol(sym.ALINEACION_PARAMETRO,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 59: break;
          case 23:
            { //System.out.println("Detecto INDICE");  
return symbol(sym.INDICE);
            }
            // fall through
          case 60: break;
          case 24:
            { //System.out.println("Detecto NOMBRE");  
return symbol(sym.NOMBRE);
            }
            // fall through
          case 61: break;
          case 25:
            { //System.out.println("Detecto TITULO");  
return symbol(sym.TITULO);
            }
            // fall through
          case 62: break;
          case 26:
            { //System.out.println("Detecto COLUMNAS");  
return symbol(sym.COLUMNAS);
            }
            // fall through
          case 63: break;
          case 27:
            { //System.out.println("Detecto OPCIONES");  
return symbol(sym.OPCIONES);
            }
            // fall through
          case 64: break;
          case 28:
            { //System.out.println("Detecto REQUERIDO");  
return symbol(sym.REQUERIDO);
            }
            // fall through
          case 65: break;
          case 29:
            { ////System.out.println("Detecto fecha: "+yytext().trim().replaceAll("\"", ""));
return symbol(sym.FECHA,yytext().trim().replaceAll("\"", ""));
            }
            // fall through
          case 66: break;
          case 30:
            { //System.out.println("Detecto ALINEACION");  
return symbol(sym.ALINEACION);
            }
            // fall through
          case 67: break;
          case 31:
            { //System.out.println("Detecto ESTRUCTURA");  
return symbol(sym.ESTRUCTURA);
            }
            // fall through
          case 68: break;
          case 32:
            { //System.out.println("Detecto FORMULARIO");  
return symbol(sym.FORMULARIO);
            }
            // fall through
          case 69: break;
          case 33:
            { //System.out.println("Detecto NOMBRE_CAMPO");  
return symbol(sym.NOMBRE_CAMPO);
            }
            // fall through
          case 70: break;
          case 34:
            { //System.out.println("Detecto ID_FORMULARIO");   
return symbol(sym.ID_FORMULARIO);
            }
            // fall through
          case 71: break;
          case 35:
            { //System.out.println("Detecto TEXTO_VISIBLE");  
return symbol(sym.TEXTO_VISIBLE);
            }
            // fall through
          case 72: break;
          case 36:
            { ////System.out.println("Detecto FECHA_CREACION");   
return symbol(sym.FECHA_CREACION);
            }
            // fall through
          case 73: break;
          case 37:
            { //System.out.println("Detecto USUARIO_CREACION");  
return symbol(sym.USUARIO_CREACION);
            }
            // fall through
          case 74: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
